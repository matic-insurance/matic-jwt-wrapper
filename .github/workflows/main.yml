name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    env:
      DATABASE_ADDR: 'database'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ '2.7', '3.1' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run specs
        env:
          COVERAGE: true
        run: bundle exec rspec

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.event_name == 'release' && github.event.action == 'published'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.7
  #         bundler-cache: true
  #     - name: Set up credentials
  #       run: |
  #         mkdir -p $HOME/.gem
  #         touch $HOME/.gem/credentials
  #         chmod 0600 $HOME/.gem/credentials
  #         printf -- "---\n:rubygems_api_key: ${{secrets.RUBYGEMS_AUTH_TOKEN}}\n" > $HOME/.gem/credentials

  #     - name: Get version
  #       run: echo "${GITHUB_REF/refs\/tags\//}" > release.tag
  #     - name: Set version
  #       run: sed -i "s/0.0.0/$(<release.tag)/g" $(find . -name "version.rb")

  #     - name: Build gem
  #       run: gem build *.gemspec
  #     - name: Push gem
  #       run: gem push *.gem
